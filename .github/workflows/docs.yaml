name: docs

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  build-documentation:
    name: Build and deploy docs
    runs-on: ubuntu-latest
    env:
      PIP_NO_CACHE_DIR: false
      PIP_USER: 1

      # Specify explicit paths for python dependencies and the pre-commit
      # environment, so we know which directories to cache
      PYTHONUSERBASE: ${{ github.workspace }}/.cache/py-user-base

    steps:
      - name: Add custom PYTHONUSERBASE to PATH
        run: echo '${{ env.PYTHONUSERBASE }}/bin/' >> $GITHUB_PATH

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v1
        with:
          key: "v0-x86_64-unknown-linux-gnu"

      - name: Setup python
        id: python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # This step caches our Python dependencies. To make sure we
      # only restore a cache when the dependencies, the python version,
      # the runner operating system, and the dependency location haven't
      # changed, we create a cache key that is a composite of those states.
      #
      # Only when the context is exactly the same, we will restore the cache.
      - name: Python Dependency Caching
        uses: actions/cache@v2
        id: python_cache
        with:
          path: ${{ env.PYTHONUSERBASE }}
          key: "python-0-${{ runner.os }}-${{ env.PYTHONUSERBASE }}-\
          ${{ steps.python.outputs.python-version }}-\
          ${{ hashFiles('./docs/requirements.txt') }}"

        # Install our dependencies if we did not restore a dependency cache
      - name: Install dependencies
        if: steps.python_cache.outputs.cache-hit != 'true'
        run: pip install -r docs/requirements.txt

      - name: Build Cargo docs
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps

      - name: Build Sphinx docs
        run: |
          cd docs
          make html

      - name: Copy Cargo docs inside Sphinx docs
        run: cp -r target/doc/ docs/build/html/api

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html
